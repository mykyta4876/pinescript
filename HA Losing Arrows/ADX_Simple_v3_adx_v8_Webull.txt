//@version=5
study(title='ADX_Simple v3_adx_v8', overlay=false)

adxlen = input(title='ADX Length', type=input.integer, defval=14, minval=1, maxval=100)

deviation1 = 1.0  //input(1.0, title="Deviation #1")
deviation2 = 2.0  //input(2.0, title="Deviation #2")

dirmov(len) =>
    up = change(high)
    down = -change(low)
    plusDM = na(up) ? na : up > down and up > 0 ? up : 0
    minusDM = na(down) ? na : down > up and down > 0 ? down : 0
    truerange = rma(tr, len)
    plus = fixnan(100 * rma(plusDM, len) / truerange)
    minus = fixnan(100 * rma(minusDM, len) / truerange)
    [plus, minus]

adx(dilen, adxlen) =>
    [plus, minus] = dirmov(dilen)
    sum = plus + minus
    adx = 100 * rma(abs(plus - minus) / (sum == 0 ? 1 : sum), adxlen)
    diff = plus - minus
    [adx, diff]


adx_v8(adxlen, dev1, dev2) =>
    [sig, diff] = adx(adxlen, adxlen)
    diffema = ema(diff, adxlen)
    std = stdev(diff, adxlen)
    bbup1 = diffema + dev1 * std
    bblo1 = diffema - dev1 * std
    bbup2 = diffema + dev2 * std
    bblo2 = diffema - dev2 * std
    [sig, diff, diffema, std, bbup1, bblo1, bbup2, bblo2]


ADX_Simple_v3_adx_v8(adxlen, dev1, dev2)=>
	[sig, diff, diffema, std, bbup1, bblo1, bbup2, bblo2] = adx_v8(adxlen, dev1, dev2)	
	positive = 0
	if diffema > 0
		positive := positive + 1
		positive
	if bbup1 > 0
		positive := positive + 1
		positive
	if bblo1 > 0
		positive := positive + 1
		positive
	if bbup2 > 0
		positive := positive + 1
		positive
	if bblo2 > 0
		positive := positive + 1
		positive

	negative = 0
	if diffema < 0
		negative := negative + 1
		negative
	if bbup1 < 0
		negative := negative + 1
		negative
	if bblo1 < 0
		negative := negative + 1
		negative
	if bbup2 < 0
		negative := negative + 1
		negative
	if bblo2 < 0
		negative := negative + 1
		negative


	positive2 = 0
	if diff > diffema
		positive2 := positive2 + 1
		positive2
	if diff > bbup1
		positive2 := positive2 + 1
		positive2
	if diff > bblo1
		positive2 := positive2 + 1
		positive2
	if diff > bbup2
		positive2 := positive2 + 1
		positive2
	if diff > bblo2
		positive2 := positive2 + 1
		positive2

	negative2 = 0
	if diff < diffema
		negative2 := negative2 + 1
		negative2
	if diff < bbup1
		negative2 := negative2 + 1
		negative2
	if diff < bblo1
		negative2 := negative2 + 1
		negative2
	if diff < bbup2
		negative2 := negative2 + 1
		negative2
	if diff < bblo2
		negative2 := negative2 + 1
		negative2

	count = positive + positive2 - negative - negative2
	avg = ema(count, adxlen)
	
	[count, avg]

	
[count, avg] = ADX_Simple_v3_adx_v8(adxlen, deviation1, deviation2)



plot(count, title='Count', color=count >= 0 ? color.lime : color.red, style=plot.style_histogram)
plot(avg, title='Count EMA', color=color.yellow)
