//@version=5
strategy("Heikin Strategy", overlay=true)

// Calculate Heikin-Ashi open
ha_open = (open + close) / 2

// Calculate Heikin-Ashi close
ha_close = (open + high + low + close) / 4

// Calculate Heikin-Ashi high
ha_high = math.max(high, math.max(ha_open, ha_close))

// Calculate Heikin-Ashi low
ha_low = math.min(low, math.min(ha_open, ha_close))

_flag_long = false
_flag_short = false
_index = 0

_flag_middle = false
if ha_close < ha_open
    for i = 2 to 9
        if i == 2
            if ha_close[1] < ha_open[1] and ha_close[2] < ha_open[2] and ha_close[2] > (ha_open[0] + ha_close[0]) / 2 and ha_close[2] < ha_open and ha_close[1] > ha_close[2]
                _flag_short := true
                break
        else if i > 2
            if ha_close[i] > (ha_open[0] + ha_close[0]) / 2 and ha_close[i] < ha_open
                for j = 1 to (i-1)
                    if ha_close[j] > (ha_open[0] + ha_close[0]) / 2
                        _flag_middle := true
                    else
                        _flag_middle := false
                        break
                    
    
                if _flag_middle == true
                    _flag_short := true
                    break

_flag_middle := false
if ha_close > ha_open
    for i = 2 to 9
        if i == 2
            if ha_open[1] < ha_close[1] and ha_open[2] < ha_close[2] and ha_close[2] > (ha_open[0] + ha_close[0]) / 2 and ha_close[2] < ha_close[0] and ha_close[1] < ha_close[2]
                _flag_long := true
                break
        else if i > 2
            if ha_close[i] < (ha_open[0] + ha_close[0]) / 2 and ha_close[i] > ha_open
                
                for j = 1 to (i-1)
                    if ha_close[j] < (ha_open[0] + ha_close[0]) / 2
                        _flag_middle := true
                    else
                        _flag_middle := false
                        break

                if _flag_middle == true
                    _flag_long := true
                    break 
plotshape(series=_flag_long, title="P", style=shape.triangleup, location=location.belowbar, color=color.green, text="P", size=size.small)   
plotshape(series=_flag_short, title="N", style=shape.triangledown, location=location.abovebar, color=color.red, text="N", size=size.small)


//plotshape(series=_flag_long, title="PS", style=shape.triangleup, location=location.belowbar, offset = _index, color=color.green, text="PS", size=size.small)   
//plotshape(series=_flag_short, title="NS", style=shape.triangledown, location=location.abovebar, offset = _index, color=color.red, text="NS", size=size.small)

if (strategy.opentrades == 0)
    if _flag_short == true
        strategy.entry("Short", strategy.short) // Open short position
        tp_level =  low - (high - low) * 0.8
        // Define stop loss and take profit conditions
        strategy.exit("Stop Loss/TP", "Short", stop=open, limit=tp_level)


    if _flag_long == true
        strategy.entry("Long", strategy.long) // Open short position
        tp_level =  high + (high - low) * 0.8
        // Define stop loss and take profit conditions
        strategy.exit("Stop Loss/TP", "Long", stop=open, limit=tp_level)