//@version=5
strategy("Heikin Strategy", overlay=true)

// Get the second component of the current bar's timestamp
currentSecond = second(timenow)
currentMinute = minute(timenow)

// Plot the indicator value
plot(currentSecond, color=color.blue, linewidth=2, title="Custom Indicator")

interval_seconds = (time - time[1]) / 1000
interval_minutes = int(interval_seconds / 60)

// Plot the indicator value
plot(interval_minutes, color=color.blue, linewidth=2, title="Custom Indicator")

_flag = false
if interval_minutes < 2
    if interval_seconds == 1
        _flag := true
    else
        if (currentSecond % interval_seconds) > (interval_seconds - 4)
            _flag := true
else
    if (currentMinute % interval_minutes) == (interval_minutes - 1)
        if currentSecond > 50
            _flag := true

var float htfhigh = high
var float htflow = low
var float htfopen = open

_flag_long = false
_flag_short = false
var int index = 0

//plotshape(series=_flag, title="T", style=shape.circle, location=location.belowbar, color=color.navy, text="T", size=size.small)
if _flag == true
    _flag_middle = true
    if close < open and close[1] > close[0] and close[1] < open[1] and close[1] > close[2] // Check if current candle is negative Heikin Ashi
        if close[2] > close[0]
            _flag_short := true
            index := 2
        else
            for i = 2 to 9 // Loop through 3rd to 10th most recent candles
                if i > 2 and close[i] < close[0]
                    _flag_middle := false

                if close[i] < open[i] and close[i] > (open[0] + close[0]) / 2 and close[i] < open and _flag_middle == true // Check if closing price of nth Heikin Ashi candle satisfies conditions
                    _flag_short := true
                    index := i
                    break

    _flag_middle := true
    if close > open and open[1] < open[0] and open[1] < close[1] and open[1] < open[2] // Check if current candle is negative Heikin Ashi
        if open[2] < open[0]
            _flag_long := _flag_long
            index := 2
        else
            for i = 2 to 9 // Loop through 3rd to 10th most recent candles
                if i > 2 and open[i] > open[0]
                    _flag_middle := false

                if close[i] > open[i] and open[i] < (open[0] + close[0]) / 2 and open[i] > close and _flag_middle == true // Check if closing price of nth Heikin Ashi candle satisfies conditions
                    _flag_long := true
                    index := i
                    break

plotshape(series=_flag_long, title="P", style=shape.triangleup, location=location.belowbar, color=color.green, text="P", size=size.small)   
plotshape(series=_flag_short, title="N", style=shape.triangledown, location=location.abovebar, color=color.red, text="N", size=size.small)


plotshape(series=_flag_long, title="PS", style=shape.triangleup, location=location.belowbar, offset = index, color=color.green, text="PS", size=size.small)   
plotshape(series=_flag_short, title="NS", style=shape.triangledown, location=location.abovebar, offset = index, color=color.red, text="NS", size=size.small)

if (strategy.opentrades == 0)
    if _flag_short == true
        strategy.entry("Short", strategy.short) // Open short position
        tp_level =  (high - low) * 0.2 - low
        // Define stop loss and take profit conditions
        strategy.exit("Stop Loss/TP", "Short", stop=open, limit=tp_level)


    if _flag_long == true
        strategy.entry("Short", strategy.long) // Open short position
        tp_level =  (high - low) * 0.2 + high
        // Define stop loss and take profit conditions
        strategy.exit("Stop Loss/TP", "Short", stop=open, limit=tp_level)